// IDL file for schema for Damaris collected data
// call for generating C++ code:
// /path/to/flatc --cpp --reflect-types --reflect-names --gen-object-api model_sample.fbs

namespace ross_damaris.sample;

// list all metrics that are sampled here
// even if they are from different LP types
enum ModelVariables:int {
    router_id,
    terminal_id,
    busy_time,
    link_traffic,
    fin_chunks,
    data_size,
    fin_hops,
    fin_chunks_time
}

table ModelData {
    model_ref:int (hash: "fnv1_32");

    // other model tables go here
    // Ideally, create 1 table per LP type
    // ModelData table will then have a vector of that
    // where each element represents 1 LP of that type

    routers:[DflyCustomRouter];
    terminals:[DflyCustomTerminal];
}

struct Param_radix_double {
    values:double;
}

struct Param_radix_long {
    values:long;
}

table DflyCustomRouter {
    router_id:int;
    busy_time:[Param_radix_double];
    link_traffic:[Param_radix_long];
}

table DflyCustomTerminal {
    terminal_id:int;
    fin_chunks:long;
    data_size:long;
    fin_hops:double;
    fin_chunks_time:double;
    busy_time:double;
}

// root_type must be ModelData
// which will then refer to specific model types
root_type ModelData;
